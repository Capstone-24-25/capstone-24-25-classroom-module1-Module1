P <- c()
for (i in K){
P <- append(C, binomPut(i, 20, 0.5, 100, 0.03, u, d))
}
plot(K, P)
u <- exp(0.03 * 0.025 + 0.18 * sqrt(0.025))
d <- exp(0.03 * 0.025 - 0.18 * sqrt(0.025))
K <- seq(87, 113, 0.5)
P <- c()
for (i in K){
P <- append(P, binomPut(i, 20, 0.5, 100, 0.03, u, d))
}
plot(K, P)
P
u <- exp(0.03 * 0.025 + 0.18 * sqrt(0.025))
d <- exp(0.03 * 0.025 - 0.18 * sqrt(0.025))
K <- seq(87, 113, 0.5)
P <- c()
for (i in K){
P <- append(P, binomPut(i, 20, 0.5, 100, 0.03, u, d))
}
plot(K, P, type = 'cdot')
u <- exp(0.03 * 0.025 + 0.18 * sqrt(0.025))
d <- exp(0.03 * 0.025 - 0.18 * sqrt(0.025))
K <- seq(87, 113, 0.5)
P <- c()
for (i in K){
P <- append(P, binomPut(i, 20, 0.5, 100, 0.03, u, d))
}
plot(K, P, type = 'l')
u <- exp(0.03 * 0.025 + 0.18 * sqrt(0.025))
d <- exp(0.03 * 0.025 - 0.18 * sqrt(0.025))
K <- seq(87, 113, 0.5)
P <- c()
for (i in K){
P <- append(P, binomPut(i, 20, 0.5, 100, 0.03, u, d))
}
plot(K, P, type = b)
u <- exp(0.03 * 0.025 + 0.18 * sqrt(0.025))
d <- exp(0.03 * 0.025 - 0.18 * sqrt(0.025))
K <- seq(87, 113, 0.5)
P <- c()
for (i in K){
P <- append(P, binomPut(i, 20, 0.5, 100, 0.03, u, d))
}
plot(K, P, type = 'b')
u <- exp(0.03 * 0.025 + 0.18 * sqrt(0.025))
d <- exp(0.03 * 0.025 - 0.18 * sqrt(0.025))
K <- seq(87, 113, 0.5)
P <- c()
for (i in K){
P <- append(P, binomPut(i, 20, 0.5, 100, 0.03, u, d))
}
plot(K, P)
url <- 'https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/scripts/package-installs.R'
source(url)
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
url <- 'https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/scripts/package-installs.R'
source(url)
install.packages("tidymodels")
rm(list = ls())
# load packages
library(tidyverse)
library(tidymodels)
library(modelr)
library(rsample)
library(yardstick)
# read data
url <- 'https://raw.githubusercontent.com/pstat197/pstat197a/main/materials/labs/lab4-logistic/data/biomarker_clean.csv'
s_star <- c("DERM", "RELT", "IgD", "PTN", "FSTL1")
biomarker <- read_csv(url) %>%
# subset to proteins of interest and group
select(group, any_of(s_star)) %>%
# convert group (chr) to binary (lgl)
mutate(class = (group == 'ASD')) %>%
select(-group)
# for reproducibility
set.seed(102022)
# partition data
partitions <- biomarker %>%
initial_split(prop = 0.8)
# examine
partitions
# training set
training(partitions) %>% head(4)
# testing set
testing(partitions) %>% head(4)
# fit glm
fit <- glm(class ~ .,
data = biomarker,
family = binomial(link = "logit"))
tidy(fit)
# compute predictions on the test set
testing(partitions) %>%
add_predictions(fit)
# manually transform to probabilities
testing(partitions) %>%
add_predictions(fit) %>%
mutate(probs = 1/(1 + exp(-pred))) %>%
select(class, pred, probs) %>%
head(5)
# predict on scale of response
testing(partitions) %>%
add_predictions(fit, type = 'response') %>%
select(class, pred) %>%
head(5)
# predict classes
testing(partitions) %>%
add_predictions(fit, type = 'response') %>%
mutate(pred.class = (pred > 0.5)) %>%
select(class, pred, pred.class) %>%
head(5)
# tabulate
testing(partitions) %>%
add_predictions(fit, type = 'response') %>%
mutate(pred.class = (pred > 0.5)) %>%
select(class, pred.class) %>%
table()
# store predictions as factors
pred_df <- testing(partitions) %>%
add_predictions(fit, type = 'response') %>%
mutate(pred.class = (pred > 0.5),
group = factor(class, labels = c('TD', 'ASD')),
pred.group = factor(pred.class, labels = c('TD', 'ASD')))
# check order of factor levels
pred_df %>% pull(group) %>% levels()
# compute specificity
pred_df %>%
specificity(truth = group,
estimate = pred.group,
event_level = 'second')
# sensitivity
pred_df %>%
sensitivity(truth = group,
estimate = pred.group,
event_level = 'second')
pred_df %>%
accuracy(truth = group,
estimate = pred.group,
event_level = 'second')
# define panel (arguments must be yardstick metric function names)
panel_fn <- metric_set(sensitivity, specificity)
# compute
pred_df %>%
panel_fn(truth = group,
estimate = pred.group,
event_level = 'second')
# Action
# panel of precision, recall, and f1
panel <- metric_set(precision, recall, f_meas)
predictions %>%
panel(truth = group,
estimate = pred.group,
event_level = 'second')
# Action
# panel of precision, recall, and f1
panel <- metric_set(precision, recall, f_meas)
pred_df %>%
panel(truth = group,
estimate = pred.group,
event_level = 'second')
library(tidyverse)
# examine distribution of non transformed data
setwd('/Users/davidpan/Desktop/PSTAT197/module1-group-1')
var_names <- read_csv('data/biomarker-raw.csv',
col_names = F,
n_max = 2,
col_select = -(1:2)) %>%
t() %>%
as_tibble() %>%
rename(name = V1,
abbreviation = V2) %>%
na.omit()
# read in data
biomarker_no_transform <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# reorder columns
select(group, ados, everything())
# function for trimming outliers (good idea??)
trim <- function(x, .at){
x[abs(x) > .at] <- sign(x[abs(x) > .at])*.at
return(x)
}
# read in data
biomarker_clean <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# log transform, center and scale, and trim
mutate(across(.cols = -c(group, ados),
~ trim(scale(log10(.x))[, 1], .at = 3))) %>%
# reorder columns
select(group, ados, everything())
biomarker_clean
View(biomarker_clean)
biomarker_no_transform %>% mutate(id=row_number())
biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id)
biomarker_no_transform <-biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id)
sum(is.na(biomarker_clean))
sum(is.na(biomarker_no_transform))
rowSums(biomarker_clean > 3)
rowSums(biomarker_clean == 3)
rowSums(biomarker_clean == -3)
biomarker_clean[, 1]
biomarker_clean[, 1319]
biomarker_clean[, 1320]
rowSums(biomarker_clean[3:1319] == 3)
rowSums(biomarker_clean[, 3:1319] == 3)
rowSums(biomarker_clean[, 3:1319] == -3)
biomarker_clean[154,]
rowSums(biomarker_clean[, 3:1319] == 3 | biomarker_clean[, 3:1319] == -3)
outlier_count <- rowSums(biomarker_clean[, 3:1319] == 3 | biomarker_clean[, 3:1319] == -3)
outlier_count %>% t()
outlier_count %>% t() %>% as_tibble()
cbind(c(1:154), outlier_count)
cbind(c(1:154), outlier_count) %>% as_tibble()
cbind(c(1:154), outlier_count) %>% as_tibble() %>% rename(id=V1)
cbind(c(1:154), outlier_count) %>% as_tibble() %>% rename(id=V1) %>% arrange(desc(outlier_count))
outlier_count <- rowSums(biomarker_clean[, 3:1319] == 3 | biomarker_clean[, 3:1319] == -3) %>%
cbind(c(1:154)) %>% as_tibble() %>% rename(id=V1) %>% arrange(desc(outlier_count))
outlier_count <- rowSums(biomarker_clean[, 3:1319] == 3 | biomarker_clean[, 3:1319] == -3) %>%
cbind(c(1:154)) %>% as_tibble() %>% arrange(desc(outlier_count))
View(outlier_count)
outlier_count <- rowSums(biomarker_clean[, 3:1319] == 3 | biomarker_clean[, 3:1319] == -3) %>%
cbind(c(1:154)) %>% as_tibble() %>% rename(id=.) %>% arrange(desc(outlier_count))
cbind(c(1:154), outlier_count) %>% as_tibble() %>% rename(id=V1) %>% arrange(desc(outlier_count))
outlier_count <- rowSums(biomarker_clean[, 3:1319] == 3 | biomarker_clean[, 3:1319] == -3)
cbind(c(1:154), outlier_count) %>% as_tibble() %>% rename(id=V1) %>% arrange(desc(outlier_count))
outlier_count <- rowSums(biomarker_clean[, 3:1319] == 3 | biomarker_clean[, 3:1319] == -3)
cbind(c(1:154), outlier_count) %>% as_tibble() %>% rename(id=V1) %>% arrange(desc(outlier_count))
outlier_by_id <- cbind(c(1:154), outlier_count) %>%
as_tibble() %>% rename(id=V1) %>% arrange(desc(outlier_count))
head(outlier_by_id, 10)
head(outlier_by_id, 15)
# top 10 subjects with most outliers
head(outlier_by_id, 10)
mean(outlier_count)
head(outlier_by_id, 50)
head(outlier_by_id, 10)
View(outlier_by_id)
biomarker_clean_outliers <- cbind(biomarker_clean, outlier_count)
biomarker_clean_outliers
biomarker_clean_outliers <- join(biomarker_clean, outlier_by_id, by='id')
biomarker_clean_outliers <- merge(biomarker_clean, outlier_by_id, by='id')
View(biomarker_no_transform)
View(biomarker_clean)
biomarker_clean_outliers <- merge(biomarker_no_transform, outlier_by_id, by='id')
View(biomarker_clean_outliers)
biomarker_clean_outliers <- merge(biomarker_no_transform, outlier_by_id, by='id')[,c('id','group','outlier_count')]
biomarker_clean_outliers
biomarker_no_transform <- merge(biomarker_no_transform, outlier_by_id, by='id')[,c('id','group','outlier_count')]
# read in data
biomarker_no_transform <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# reorder columns
select(group, ados, everything())
# examine outliers
biomarker_no_transform <-biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id)
# outliers will have values of 3 or -3
# sum number of outliers for each subject
outlier_count <- rowSums(biomarker_clean[, 3:1319] == 3 | biomarker_clean[, 3:1319] == -3)
outlier_by_id <- cbind(c(1:154), outlier_count) %>%
as_tibble() %>% rename(id=V1) %>% arrange(desc(outlier_count))
# average number of outliers in all subjects
mean(outlier_count)
# top 10 subjects with most outliers
# these subjects have an outlier count much greater than the mean
# subjects with more than 50 outliers: 154, 108, 9, 121, 52, 77, 147
head(outlier_by_id, 10)
# examine whether group affects outliers
biomarker_no_transform <- merge(biomarker_no_transform, outlier_by_id, by='id')[,c('id','group','outlier_count')]
ASD_mean_out <- mean(biomarker_no_transform[biomarker_no_transform$group=='ASD', outlier_count])
biomarker_no_transform[biomarker_no_transform$group=='ASD', outlier_count]
biomarker_no_transform[biomarker_no_transform$group=='ASD',]
ASD_mean_out <- mean(biomarker_no_transform[biomarker_no_transform$group=='ASD',]$outlier_count)
TD_mean_out <- mean(biomarker_no_transform[biomarker_no_transform$group=='TD',]$outlier_count)
# read in data
biomarker_no_transform <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# reorder columns
select(group, ados, everything())
setwd('/Users/davidpan/Desktop/PSTAT197/module1-group-1')
var_names <- read_csv('data/biomarker-raw.csv',
col_names = F,
n_max = 2,
col_select = -(1:2)) %>%
t() %>%
as_tibble() %>%
rename(name = V1,
abbreviation = V2) %>%
na.omit()
# read in data
biomarker_no_transform <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# reorder columns
select(group, ados, everything())
# outliers will have values of 3 or -3
# sum number of outliers for each subject
outlier_count <- rowSums(biomarker_clean[, 3:1319] == 3 | biomarker_clean[, 3:1319] == -3)
library(tidyverse)
# get names
var_names <- read_csv('data/biomarker-raw.csv',
col_names = F,
n_max = 2,
col_select = -(1:2)) %>%
t() %>%
as_tibble() %>%
rename(name = V1,
abbreviation = V2) %>%
na.omit()
# function for trimming outliers (good idea??)
trim <- function(x, .at){
x[abs(x) > .at] <- sign(x[abs(x) > .at])*.at
return(x)
}
# read in data
biomarker_clean <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# log transform, center and scale, and trim
mutate(across(.cols = -c(group, ados),
~ trim(scale(log10(.x))[, 1], .at = 3))) %>%
# reorder columns
select(group, ados, everything())
# export as r binary
save(list = 'biomarker_clean',
file = 'data/biomarker-clean.RData')
outliers will have values of 3 or -3
# outliers will have values of 3 or -3
# sum number of outliers for each subject
outlier_count <- rowSums(biomarker_clean[, 3:1319] == 3 | biomarker_clean[, 3:1319] == -3)
outlier_by_id <- cbind(c(1:154), outlier_count) %>%
as_tibble() %>% rename(id=V1) %>% arrange(desc(outlier_count))
# average number of outliers in all subjects
mean(outlier_count)
head(outlier_by_id, 10)
biomarker_no_transform <- biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id) %>%
merge(outlier_by_id, by='id')[,c('id','group','outlier_count')]
?join
?join_by
biomarker_no_transform <- biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id) %>%
inner_join(outlier_by_id, by='id')[,c('id','group','outlier_count')]
biomarker_no_transform <- biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id) %>%
merge(y=outlier_by_id, by='id')[,c('id','group','outlier_count')]
biomarker_no_transform <- biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id) %>%
inner_join(y=outlier_by_id, by='id')[,c('id','group','outlier_count')]
biomarker_no_transform <- biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id) %>%
left_join(y=outlier_by_id, by='id')[,c('id','group','outlier_count')]
biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id) %>%
left_join(y=outlier_by_id, by='id')[,c('id','group','outlier_count')]
biomarker_no_transform <- biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id) %>%
merge(biomarker_no_transform, outlier_by_id, by='id')[,c('id','group','outlier_count')]
biomarker_no_transform
biomarker_no_transform %>%
merge(biomarker_no_transform, outlier_by_id, by='id')[,c('id','group','outlier_count')]
biomarker_no_transform %>%
merge(outlier_by_id, by='id')[,c('id','group','outlier_count')]
biomarker_no_transform <- merge(biomarker_no_transform, outlier_by_id, by='id')[,c('id','group','outlier_count')]
biomarker_no_transform <- biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id)
biomarker_no_transform <- merge(biomarker_no_transform, outlier_by_id, by='id')[,c('id','group','outlier_count')]
ASD_mean_out <- mean(biomarker_no_transform[biomarker_no_transform$group=='ASD',]$outlier_count)
TD_mean_out <- mean(biomarker_no_transform[biomarker_no_transform$group=='TD',]$outlier_count)
ggplot(biomarker_no_transform, aes(x=outlier_count, color=group, fill=group)) +
geom_histogram(alpha=0.5)
ggplot(biomarker_no_transform, aes(x=SMAD2, color=group, fill=group)) +
geom_histogram(alpha=0.5)
ggplot(biomarker_clean, aes(x=SMAD2, color=group, fill=group)) +
geom_histogram(alpha=0.5)
ggplot(biomarker_no_transform, aes(x=outlier_count, fill=group)) +
geom_histogram(alpha=0.5)
ggplot(biomarker_no_transform[biomarker_no_transform$group=='ASD',], aes(x=outlier_count, fill=group)) +
geom_histogram(alpha=0.5)
ggplot(biomarker_no_transform, aes(x=outlier_count, fill=group)) +
geom_histogram(alpha=0.5)
ggplot(biomarker_no_transform, aes(x=outlier_count, fill=group)) +
geom_histogram(alpha=0.5, position='dodge')
ggplot(biomarker_no_transform, aes(x=outlier_count, fill=group)) +
geom_histogram(alpha=0.5, position='dodge') +
facet_grid(group~.)
ggplot(biomarker_no_transform, aes(x=outlier_count, fill=group)) +
geom_histogram(alpha=0.5, position='dodge') +
facet_grid(~group)
ggplot(biomarker_no_transform, aes(x=outlier_count, color=group, fill=group)) +
geom_histogram(alpha=0.5, position='dodge') +
facet_grid(~group)
ggplot(biomarker_no_transform, aes(x=outlier_count, color=group, fill=group)) +
geom_histogram(alpha=0.5, position='dodge') +
facet_grid(~group) +
labs(title='Distribition of Outlier Count by Group', x='Outliers', y='Frequency')
# look at the distribution of outliers between groups
ggplot(biomarker_no_transform, aes(x=outlier_count, color=group, fill=group)) +
geom_histogram(alpha=0.5, position='dodge') + theme_minimal()
facet_grid(~group) +
labs(title='Distribition of Outlier Count by Group', x='Outliers', y='Frequency')
ggplot(biomarker_no_transform, aes(x=outlier_count, color=group, fill=group)) +
geom_histogram(alpha=0.5) + theme_minimal() + facet_grid(~group) +
labs(title='Distribition of Outlier Count by Group', x='Outliers', y='Frequency')
View(biomarker_no_transform)
View(biomarker_clean)
biomarker_no_transform <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# reorder columns
select(group, ados, everything())
View(biomarker_no_transform)
outlier_count <- rowSums(biomarker_clean[, 3:1319] == 3 | biomarker_clean[, 3:1319] == -3)
outlier_by_id <- cbind(c(1:154), outlier_count) %>%
as_tibble() %>% rename(id=V1) %>% arrange(desc(outlier_count))
mean(outlier_count)
# subjects with more than 50 outliers: 154, 108, 9, 121, 52, 77, 147
head(outlier_by_id, 10)
biomarker_no_transform <- biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id)
biomarker_outliers <- merge(biomarker_no_transform, outlier_by_id, by='id')[,c('id','group','ados','outlier_count')]
ASD_mean_out <- mean(biomarker_no_transform[biomarker_no_transform$group=='ASD',]$outlier_count)
TD_mean_out <- mean(biomarker_no_transform[biomarker_no_transform$group=='TD',]$outlier_count)
biomarker_no_transform <- biomarker_no_transform %>% mutate(id=row_number()) %>% relocate(id)
View(biomarker_no_transform)
biomarker_outliers <- merge(biomarker_no_transform, outlier_by_id, by='id')[,c('id','group','ados','outlier_count')]
View(biomarker_outliers)
ASD_mean_out <- mean(biomarker_no_transform[biomarker_no_transform$group=='ASD',]$outlier_count)
ASD_mean_out <- mean(biomarker_outliers[biomarker_no_transform$group=='ASD',]$outlier_count)
TD_mean_out <- mean(biomarker_outliers[biomarker_no_transform$group=='TD',]$outlier_count)
ggplot(biomarker_outliers, aes(x=outlier_count, color=group, fill=group)) +
geom_histogram(alpha=0.5) + theme_minimal() + facet_grid(~group) +
labs(title='Distribition of Outlier Count by Group', x='Outliers', y='Frequency')
ggplot(biomarker_outliers, aes(x=outlier_count, color=group, fill=group)) +
geom_histogram(binwidth=20, alpha=0.5) + theme_minimal() + facet_grid(~group) +
labs(title='Distribition of Outlier Count by Group', x='Outliers', y='Frequency')
ggplot(biomarker_outliers, aes(x=outlier_count, color=group, fill=group)) +
geom_histogram(binwidth=10, alpha=0.5) + theme_minimal() + facet_grid(~group) +
labs(title='Distribition of Outlier Count by Group', x='Outliers', y='Frequency')
View(biomarker_outliers)
ggplot(biomarker_outliers[biomarker_outliers$group=='ASD',], aes(x=ados, y=outlier_count)) +
geom_point()
head(outlier_by_id, 10)
mean(outlier_count)
biomarker_outliers %>% arrange(desc(outlier_count))
ASD_median_out <- median(biomarker_outliers[biomarker_no_transform$group=='ASD',]$outlier_count)
TD_median_out <- median(biomarker_outliers[biomarker_no_transform$group=='TD',]$outlier_count)
View(biomarker_clean)
mean(biomarker_outliers[biomarker_no_transform$ados<= 15,]$outlier_count)
biomarker_outliers[biomarker_no_transform$ados<= 15,]
mean(biomarker_outliers[biomarker_no_transform$ados<= 15,]$outlier_count, na.rm=TRUE)
mean(biomarker_outliers[biomarker_no_transform$ados>15,]$outlier_count, na.rm=TRUE)
